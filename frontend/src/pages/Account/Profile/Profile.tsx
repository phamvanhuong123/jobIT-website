import {
    Card,
    Typography,
    Button,
    Modal,
    Form,
    Input,
    DatePicker,
    Select,
    Row,
    Col,
} from "antd";
import {
    EditOutlined,
    MailOutlined,
    PhoneOutlined,
    GiftOutlined,
    UserOutlined,
    EnvironmentOutlined,
    LinkOutlined,
    DeleteOutlined,
    CameraOutlined,
} from "@ant-design/icons";

import { useState } from "react";
import "./Profile.css";
import SectionModals from "./SectionModals.tsx";
import { useAppSelector } from "~/store.ts";

const { Title, Text } = Typography;

const sections = [
    {
        title: "Gi·ªõi thi·ªáu b·∫£n th√¢n",
        desc: "Gi·ªõi thi·ªáu ƒëi·ªÉm m·∫°nh v√† s·ªë nƒÉm kinh nghi·ªám c·ªßa b·∫°n",
        icon: "üß†",
    },
    {
        title: "H·ªçc v·∫•n",
        desc: "Chia s·∫ª tr√¨nh ƒë·ªô h·ªçc v·∫•n c·ªßa b·∫°n",
        icon: "üéì",
    },
    {
        title: "Kinh nghi·ªám l√†m vi·ªác",
        desc: "Th·ªÉ hi·ªán nh·ªØng th√¥ng tin chi ti·∫øt v·ªÅ qu√° tr√¨nh l√†m vi·ªác",
        icon: "üíº",
    },
    {
        title: "K·ªπ nƒÉng",
        desc: "Li·ªát k√™ c√°c k·ªπ nƒÉng chuy√™n m√¥n c·ªßa b·∫°n",
        icon: "‚öôÔ∏è",
    },
    {
        title: "Ngo·∫°i ng·ªØ",
        desc: "Li·ªát k√™ c√°c ng√¥n ng·ªØ m√† b·∫°n bi·∫øt",
        icon: "üàØ",
    },
    {
        title: "D·ª± √°n n√¥Ãâi b√¢Ã£t",
        desc: "Gi·ªõi thi·ªáu d·ª± √°n n·ªïi b·∫≠t c·ªßa b·∫°n",
        icon: "üöÄ",
    },
    {
        title: "Ch·ª©ng ch·ªâ",
        desc: "B·ªï sung ch·ª©ng ch·ªâ li√™n quan ƒë·∫øn k·ªπ nƒÉng c·ªßa b·∫°n",
        icon: "üìú",
    },
    {
        title: "Gi·∫£i th∆∞·ªüng",
        desc: "Th·ªÉ hi·ªán gi·∫£i th∆∞·ªüng ho·∫∑c th√†nh t√≠ch m√† b·∫°n ƒë·∫°t ƒë∆∞·ª£c",
        icon: "üèÜ",
    },
];



function Profile() {
    const user = useAppSelector(state => state.userCandidate.candidate)
    
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [form] = Form.useForm();

    const handleOpenModal = () => {
        setIsModalOpen(true);
    };

    const handleCloseModal = () => {
        setIsModalOpen(false);
    };

    const handleSave = () => {
        form.validateFields().then((values) => {
            console.log("Th√¥ng tin ƒë√£ l∆∞u:", values);
            setIsModalOpen(false);
        });
    };
    const [openSection, setOpenSection] = useState<number | null>(null);


    return (
        <div className="profile-container">
            {/* Header */}
            <Card className="profile-header">
                <div className="profile-top">
                    <div className="avatar-section">
                        <img
                            src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
                            alt="avatar"
                            className="avatar"
                        />
                        <div>
                            <Title level={4} className="name">{user?.fullName}</Title>
                            <Text className="sub-title">C·∫≠p nh·∫≠t ch·ª©c danh</Text>
                            <div className="info-grid">
                                <div><MailOutlined /> {user?.email}</div>
                                <div><PhoneOutlined /> 0388779542</div>
                                <div><GiftOutlined /> Ng√†y sinh: 30/09/1992</div>
                                <div><UserOutlined /> Gi·ªõi t√≠nh: Nam</div>
                                <div><EnvironmentOutlined /> s√¥ÃÅ 78, ƒë∆∞∆°ÃÄng Nguy√™ÃÉn vƒÉn C∆∞ÃÄ, p. Ng√¥ m√¢y, Tp. Quy Nh∆°n, BiÃÄnh ƒêiÃ£nh</div>
                                <div><LinkOutlined /> Link c√° nh√¢n</div>
                            </div>
                        </div>
                    </div>

                    <Button
                        className="edit-icon-btn"
                        type="text"
                        icon={<EditOutlined />}
                        onClick={handleOpenModal}
                    />
                </div>
            </Card>
            {/* Modal cho ph√¢ÃÄn tr√™n */}
            <Modal
                title="Th√¥ng tin c√° nh√¢n"
                open={isModalOpen}
                onCancel={handleCloseModal}
                footer={[
                    <Button key="cancel" onClick={handleCloseModal}>
                        H·ªßy
                    </Button>,
                    <Button key="submit" type="primary" onClick={handleSave} style={{ backgroundColor: "#ff4d4f", borderColor: "#fa8c16" }}>
                        L∆∞u
                    </Button>,
                ]}
                width={800}
            >
                <Form form={form} layout="vertical">
                    <Row gutter={24}>
                        <Col span={6} style={{ textAlign: "center" }}>
                            <img
                                src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
                                alt="avatar"
                                style={{ width: 80, marginBottom: 8 }}
                            />
                            <div>
                                <Button type="link" icon={<CameraOutlined />}>S·ª≠a</Button>
                                <Button type="link" icon={<DeleteOutlined />}>Xo√°</Button>
                            </div>
                        </Col>
                        <Col span={18}>
                            <Row gutter={16}>
                                <Col span={12}>
                                    <Form.Item name="fullName" label="H·ªç v√† T√™n" validateTrigger="onBlur" rules={[{
                                        required: true, message: 'Vui l√≤ng ƒëi·ªÅn h·ªç v√† t√™n c·ªßa b·∫°n'
                                    }]}>
                                        <Input defaultValue="Nguy·ªÖn VƒÉn A" />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="position" label="Ch·ª©c danh" validateTrigger="onBlur" rules={[{
                                        required: true, message: 'Vui l√≤ng ƒëi·ªÅn ch·ª©c danh c·ªßa b·∫°n'
                                    }]}>
                                        <Input placeholder="Nh·∫≠p ch·ª©c danh" />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="email" label="ƒê·ªãa ch·ªâ email">
                                        <Input disabled defaultValue="vanA1@gmail.com" />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="phone" label="S·ªë ƒëi·ªán tho·∫°i" validateTrigger="onBlur" rules={[{ required: true, message: 'Vui l√≤ng ƒëi·ªÅn s√¥ÃÅ ƒëi√™Ã£n thoaÃ£i c·ªßa b·∫°n' }]}>
                                        <Input />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="dob" label="Ng√†y sinh" validateTrigger="onBlur" rules={[{ required: true, message: 'Vui l√≤ng ƒëi·ªÅn ngaÃÄy sinh c·ªßa b·∫°n' }]}>
                                        <DatePicker style={{ width: "100%" }} />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="gender" label="Gi·ªõi t√≠nh">
                                        <Select defaultValue="Nam" options={[{ value: "Nam" }, { value: "N·ªØ" }]} />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="city" label="T·ªânh/Th√†nh ph·ªë hi·ªán t·∫°i" rules={[{ required: true }]}>
                                        <Select placeholder="Ch·ªçn t·ªânh/th√†nh ph·ªë" />
                                    </Form.Item>
                                </Col>
                                <Col span={12}>
                                    <Form.Item name="address" label="ƒê·ªãa ch·ªâ(T√™n ƒë∆∞∆°ÃÄng, qu√¢Ã£n/huy√™Ã£n">
                                        <Input />
                                    </Form.Item>
                                </Col>
                                <Col span={24}>
                                    <Form.Item name="link" label="Link c√° nh√¢n (Linkedin, portfolio,...)">
                                        <Input />
                                    </Form.Item>
                                </Col>
                            </Row>
                        </Col>
                    </Row>
                </Form>
            </Modal >


            {/* Section list */}
            <div className="section-list">
                {sections.map((section, idx) => (
                    <div key={idx} className="section-card">
                        <div className="section-left">
                            <div className="section-icon">{section.icon}</div>
                            <div>
                                <div className="section-title">{section.title}</div>
                                <div className="section-desc">{section.desc}</div>
                            </div>
                        </div>
                        <div className="add-icon" onClick={() => setOpenSection(idx)}>+</div>
                    </div>
                ))}
            </div>
            <SectionModals openSection={openSection} onClose={() => setOpenSection(null)} />
        </div >
    );
}

export default Profile;
